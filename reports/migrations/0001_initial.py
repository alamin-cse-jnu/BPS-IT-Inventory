# Generated by Django 4.2.7 on 2025-07-05 15:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("COUNT", "Count Metric"),
                            ("SUM", "Sum Metric"),
                            ("AVERAGE", "Average Metric"),
                            ("PERCENTAGE", "Percentage Metric"),
                            ("RATIO", "Ratio Metric"),
                            ("TREND", "Trend Metric"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "calculation_query",
                    models.TextField(help_text="SQL query or calculation logic"),
                ),
                (
                    "calculation_period",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("YEARLY", "Yearly"),
                            ("REAL_TIME", "Real Time"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "previous_value",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                ("last_calculated", models.DateTimeField(blank=True, null=True)),
                ("calculation_time_seconds", models.FloatField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Report template name", max_length=200),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the report"
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("INVENTORY", "Inventory Report"),
                            ("ASSIGNMENT", "Assignment Report"),
                            ("MAINTENANCE", "Maintenance Report"),
                            ("AUDIT", "Audit Report"),
                            ("WARRANTY", "Warranty Report"),
                            ("UTILIZATION", "Utilization Report"),
                            ("COMPLIANCE", "Compliance Report"),
                            ("FINANCIAL", "Financial Report"),
                            ("ANALYTICS", "Analytics Report"),
                            ("CUSTOM", "Custom Report"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OPERATIONAL", "Operational Reports"),
                            ("MANAGEMENT", "Management Reports"),
                            ("COMPLIANCE", "Compliance & Audit Reports"),
                            ("ANALYTICS", "Analytics & Insights"),
                            ("FINANCIAL", "Financial Reports"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "template_config",
                    models.JSONField(
                        default=dict,
                        help_text="Template configuration including filters, columns, and formatting",
                    ),
                ),
                (
                    "sql_query",
                    models.TextField(
                        blank=True, help_text="Custom SQL query for advanced reports"
                    ),
                ),
                (
                    "columns",
                    models.JSONField(
                        default=list,
                        help_text="List of columns to include in the report",
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        default=dict, help_text="Default filters for the report"
                    ),
                ),
                (
                    "sorting",
                    models.JSONField(
                        default=dict, help_text="Default sorting configuration"
                    ),
                ),
                (
                    "accessible_by_roles",
                    models.JSONField(
                        default=list,
                        help_text="List of user roles that can access this report",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this report requires approval to generate",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_system_template",
                    models.BooleanField(
                        default=False,
                        help_text="System-defined template (cannot be deleted)",
                    ),
                ),
                ("version", models.CharField(default="1.0", max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_report_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="ReportSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("YEARLY", "Yearly"),
                            ("ON_DEMAND", "On Demand Only"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("DOWNLOAD", "Download Link"),
                            ("DASHBOARD", "Dashboard Notification"),
                            ("SMS", "SMS Alert"),
                            ("WEBHOOK", "Webhook"),
                        ],
                        default="EMAIL",
                        max_length=15,
                    ),
                ),
                (
                    "delivery_time",
                    models.TimeField(
                        default="09:00", help_text="Time of day to deliver reports"
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ],
                        help_text="Day of week for weekly reports",
                        null=True,
                    ),
                ),
                (
                    "day_of_month",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Day of month for monthly reports (1-28)",
                        null=True,
                    ),
                ),
                (
                    "email_recipients",
                    models.JSONField(
                        default=list, help_text="Additional email recipients"
                    ),
                ),
                ("include_charts", models.BooleanField(default=True)),
                ("include_raw_data", models.BooleanField(default=False)),
                (
                    "export_format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF"),
                            ("EXCEL", "Excel"),
                            ("CSV", "CSV"),
                            ("JSON", "JSON"),
                        ],
                        default="PDF",
                        max_length=10,
                    ),
                ),
                (
                    "filter_parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Report-specific filter parameters",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_generated", models.DateTimeField(blank=True, null=True)),
                ("next_scheduled", models.DateTimeField(blank=True, null=True)),
                ("generation_count", models.PositiveIntegerField(default=0)),
                ("failure_count", models.PositiveIntegerField(default=0)),
                ("last_error", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="reports.reporttemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Schedule name", max_length=200)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("YEARLY", "Yearly"),
                            ("CUSTOM", "Custom Schedule"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "time_of_day",
                    models.TimeField(help_text="Time to generate the report"),
                ),
                (
                    "day_of_week",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                            (7, "Sunday"),
                        ],
                        help_text="Day of week for weekly reports",
                        null=True,
                    ),
                ),
                (
                    "day_of_month",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Day of month for monthly reports (1-31)",
                        null=True,
                    ),
                ),
                (
                    "custom_schedule",
                    models.CharField(
                        blank=True,
                        help_text="Custom cron expression for complex schedules",
                        max_length=100,
                    ),
                ),
                (
                    "default_format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF Document"),
                            ("CSV", "CSV File"),
                            ("EXCEL", "Excel Spreadsheet"),
                            ("JSON", "JSON Data"),
                            ("HTML", "HTML Report"),
                        ],
                        default="PDF",
                        max_length=10,
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        default=dict, help_text="Default filters for scheduled reports"
                    ),
                ),
                (
                    "email_recipients",
                    models.JSONField(
                        default=list, help_text="Email addresses to send the report to"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "start_date",
                    models.DateField(help_text="When to start generating reports"),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="When to stop generating reports",
                        null=True,
                    ),
                ),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("next_run", models.DateTimeField(blank=True, null=True)),
                ("run_count", models.PositiveIntegerField(default=0)),
                ("failure_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "notify_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users to notify when report is generated",
                        related_name="scheduled_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="reports.reporttemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportGeneration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "report_name",
                    models.CharField(
                        help_text="Custom name for this report instance", max_length=200
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "file_format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF Document"),
                            ("CSV", "CSV File"),
                            ("EXCEL", "Excel Spreadsheet"),
                            ("JSON", "JSON Data"),
                            ("HTML", "HTML Report"),
                        ],
                        default="PDF",
                        max_length=10,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low Priority"),
                            ("NORMAL", "Normal Priority"),
                            ("HIGH", "High Priority"),
                            ("URGENT", "Urgent"),
                        ],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                (
                    "filters_applied",
                    models.JSONField(
                        default=dict,
                        help_text="Specific filters applied to this report generation",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict,
                        help_text="Additional parameters for report generation",
                    ),
                ),
                ("date_range_start", models.DateField(blank=True, null=True)),
                ("date_range_end", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the generated file expires",
                        null=True,
                    ),
                ),
                ("progress_percentage", models.PositiveIntegerField(default=0)),
                ("current_step", models.CharField(blank=True, max_length=100)),
                (
                    "file_path",
                    models.FileField(blank=True, null=True, upload_to="reports/"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "record_count",
                    models.PositiveIntegerField(
                        blank=True, help_text="Number of records in report", null=True
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("generation_time_seconds", models.FloatField(blank=True, null=True)),
                ("query_time_seconds", models.FloatField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("is_shared", models.BooleanField(default=False)),
                ("download_count", models.PositiveIntegerField(default=0)),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users who have access to this report",
                        related_name="shared_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generations",
                        to="reports.reporttemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cache_key", models.CharField(max_length=128, unique=True)),
                (
                    "parameters_hash",
                    models.CharField(
                        help_text="Hash of the parameters used to generate this report",
                        max_length=64,
                    ),
                ),
                ("cached_data", models.BinaryField(help_text="Compressed report data")),
                ("file_format", models.CharField(default="PDF", max_length=10)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "data_hash",
                    models.CharField(
                        help_text="Hash of the cached data for integrity checking",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("hit_count", models.PositiveIntegerField(default=0)),
                (
                    "generation_time",
                    models.FloatField(
                        help_text="Time taken to generate this report in seconds"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("VALID", "Valid"),
                            ("EXPIRED", "Expired"),
                            ("GENERATING", "Being Generated"),
                            ("FAILED", "Generation Failed"),
                            ("PURGED", "Purged"),
                        ],
                        default="VALID",
                        max_length=15,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "report_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cached_reports",
                        to="reports.reporttemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cached_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("VIEW", "Viewed Online"),
                            ("DOWNLOAD", "Downloaded"),
                            ("SHARE", "Shared"),
                            ("PRINT", "Printed"),
                            ("EMAIL", "Emailed"),
                        ],
                        max_length=10,
                    ),
                ),
                ("accessed_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "accessed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report_generation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_logs",
                        to="reports.reportgeneration",
                    ),
                ),
            ],
            options={
                "ordering": ["-accessed_at"],
            },
        ),
        migrations.CreateModel(
            name="DataExport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "export_type",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual Export"),
                            ("SCHEDULED", "Scheduled Export"),
                            ("API", "API Export"),
                            ("BULK", "Bulk Export"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "export_format",
                    models.CharField(
                        choices=[
                            ("CSV", "CSV File"),
                            ("EXCEL", "Excel Spreadsheet"),
                            ("JSON", "JSON Data"),
                            ("XML", "XML Data"),
                            ("PDF", "PDF Report"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "data_source",
                    models.CharField(
                        help_text="Source of exported data", max_length=200
                    ),
                ),
                (
                    "filters_applied",
                    models.JSONField(
                        default=dict, help_text="Filters applied during export"
                    ),
                ),
                (
                    "columns_included",
                    models.JSONField(
                        default=list, help_text="Columns included in export"
                    ),
                ),
                ("record_count", models.PositiveIntegerField(blank=True, null=True)),
                ("file_size_bytes", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "file_path",
                    models.FileField(blank=True, null=True, upload_to="exports/"),
                ),
                ("exported_at", models.DateTimeField(auto_now_add=True)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("contains_sensitive_data", models.BooleanField(default=False)),
                (
                    "retention_days",
                    models.PositiveIntegerField(
                        default=30, help_text="Days to retain the export file"
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "exported_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_exports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-exported_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("CHART", "Chart Widget"),
                            ("TABLE", "Data Table"),
                            ("METRIC", "Key Metric"),
                            ("GAUGE", "Gauge/Progress"),
                            ("LIST", "Item List"),
                            ("MAP", "Location Map"),
                            ("CALENDAR", "Calendar View"),
                            ("ALERT", "Alert/Notification"),
                            ("CUSTOM", "Custom Widget"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="Widget-specific configuration including data sources and display options",
                    ),
                ),
                (
                    "data_source",
                    models.CharField(
                        help_text="Data source identifier", max_length=200
                    ),
                ),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(
                        default=300, help_text="Auto-refresh interval in seconds"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_system_widget",
                    models.BooleanField(
                        default=False, help_text="System-defined widget"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_widgets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["widget_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("SYSTEM", "System Dashboard"),
                            ("DEPARTMENT", "Department Dashboard"),
                            ("USER", "Personal Dashboard"),
                            ("EXECUTIVE", "Executive Dashboard"),
                            ("OPERATIONAL", "Operational Dashboard"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "layout_config",
                    models.JSONField(
                        default=dict,
                        help_text="Dashboard layout configuration including widgets and positioning",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Available to all users"
                    ),
                ),
                (
                    "accessible_by_roles",
                    models.JSONField(
                        default=list, help_text="Roles that can access this dashboard"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Default dashboard for the role"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["dashboard_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="CustomQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "description",
                    models.TextField(help_text="Description of what this query does"),
                ),
                (
                    "query_type",
                    models.CharField(
                        choices=[
                            ("SELECT", "Data Selection"),
                            ("ANALYSIS", "Data Analysis"),
                            ("AGGREGATION", "Data Aggregation"),
                            ("DASHBOARD", "Dashboard Widget"),
                            ("EXPORT", "Data Export"),
                            ("MONITORING", "System Monitoring"),
                        ],
                        max_length=15,
                    ),
                ),
                ("sql_query", models.TextField(help_text="The SQL query to execute")),
                (
                    "parameters",
                    models.JSONField(
                        default=list,
                        help_text="List of parameter definitions for this query",
                    ),
                ),
                (
                    "security_level",
                    models.CharField(
                        choices=[
                            ("PUBLIC", "Public Access"),
                            ("INTERNAL", "Internal Use"),
                            ("RESTRICTED", "Restricted Access"),
                            ("CONFIDENTIAL", "Confidential"),
                        ],
                        default="INTERNAL",
                        max_length=15,
                    ),
                ),
                (
                    "allowed_groups",
                    models.JSONField(
                        default=list,
                        help_text="List of user groups allowed to execute this query",
                    ),
                ),
                (
                    "timeout_seconds",
                    models.PositiveIntegerField(
                        default=30, help_text="Query timeout in seconds"
                    ),
                ),
                (
                    "max_results",
                    models.PositiveIntegerField(
                        default=1000, help_text="Maximum number of results to return"
                    ),
                ),
                (
                    "cache_duration",
                    models.PositiveIntegerField(
                        default=300, help_text="Cache duration in seconds"
                    ),
                ),
                ("execution_count", models.PositiveIntegerField(default=0)),
                ("last_executed", models.DateTimeField(blank=True, null=True)),
                (
                    "avg_execution_time",
                    models.FloatField(
                        blank=True,
                        help_text="Average execution time in seconds",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_validated", models.BooleanField(default=False)),
                ("validation_error", models.TextField(blank=True)),
                ("last_validation", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="accessible_custom_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_custom_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_executed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="last_executed_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Custom Queries",
                "ordering": ["name"],
            },
        ),
        migrations.AddIndex(
            model_name="reporttemplate",
            index=models.Index(
                fields=["report_type"], name="reports_rep_report__f68e8c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reporttemplate",
            index=models.Index(
                fields=["category"], name="reports_rep_categor_dca8cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reporttemplate",
            index=models.Index(
                fields=["is_active"], name="reports_rep_is_acti_4b0ce5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportsubscription",
            index=models.Index(
                fields=["is_active", "next_scheduled"],
                name="reports_rep_is_acti_48dee0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reportsubscription",
            index=models.Index(
                fields=["user", "is_active"], name="reports_rep_user_id_533daf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportsubscription",
            index=models.Index(
                fields=["report_template", "frequency"],
                name="reports_rep_report__8e7b72_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="reportsubscription",
            unique_together={("user", "report_template", "frequency")},
        ),
        migrations.AddIndex(
            model_name="reportgeneration",
            index=models.Index(
                fields=["generated_by", "status"], name="reports_rep_generat_769521_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportgeneration",
            index=models.Index(
                fields=["status", "created_at"], name="reports_rep_status_12e077_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportgeneration",
            index=models.Index(
                fields=["template", "created_at"], name="reports_rep_templat_30294b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportcache",
            index=models.Index(
                fields=["cache_key"], name="reports_rep_cache_k_6abaaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportcache",
            index=models.Index(
                fields=["report_template", "expires_at"],
                name="reports_rep_report__bc0fa6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reportcache",
            index=models.Index(
                fields=["user", "-created_at"], name="reports_rep_user_id_e0a24c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reportcache",
            index=models.Index(
                fields=["status", "expires_at"], name="reports_rep_status_f991bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customquery",
            index=models.Index(
                fields=["query_type", "is_active"],
                name="reports_cus_query_t_5f31f4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customquery",
            index=models.Index(
                fields=["created_by", "-created_at"],
                name="reports_cus_created_c5e23d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customquery",
            index=models.Index(
                fields=["security_level"], name="reports_cus_securit_012e95_idx"
            ),
        ),
    ]
